# pomodoroMvp1

First version made quickly with typical stack.

This file contains the highlights of my journey creating this project. As best as possible, I tried to capture thoughts, learnings, challenges, solutions, sources, etc to this file. To be fair, I created this file later in the development process so it leaves much to be desired.

Initial Problem:
Implement a simple pomodoro timer in the browser.

Sub Problems:

1. How do we get and display time to the user?
2. What is needed to set up our first pomodoro?
3. How do we update the user of time (every second) to allow them to see their progress?
4. How do we stop the clock once we have completed a pomodoro?
5. How do we allow the user to start a break?
6. How do we extend the functionality to up to 4 pomodoros?
7. How do we congratulate the user for complete a full pomodoro?


-----------------------------------

July 1:

For some reason, I thought I could rework the logic and simplify this problem. So far, I seem to have created a mess for myself. I will take a break and try reworking my thought process later.

UPDATE:
As suspected, I have made this problem entirely too complicated by not taking the time to think through it properly initially. All that is really needed is a way to countdown from 60 then reduce the minutes until you hit 0.  Testing this new approacch in the terminal with node before implementing it with a server.


-----------------------------------

July 2:

Ok, the core part of the problem is solved. using setTimeout and an arrow function allows the countdown. Now, I can transfer my code from the testing section to display on the HTML.


-----------------------------------

July 3:

Officially, I have solved the timer problem - in MVP...in the console. Now, I will transfer the code over to a version that displays in the browser.

UPDATES:
	- with some errors able to loop through pomdoro object to see key value pairs
	- decided to create a todo and learnings files with aim to rewrite this readme into a more traditional README file

LEARNINGS:
	- for some reason I keep over complicating this problem by adding features before completing a simple working prototype
	- this may be my biggest single break through: stay focused on creating the minimum possible working thing before doing anything else


-----------------------------------

Jul 5

I am absolutely confused as to why setInterval refuses to call the timer function. I have been struggling to get various versions of getting a timer to automatically work with setInterval updating the time. The plan is to solve being able to present updated time to the DOM, transform that code work work with a countdown timer, and move to the next phase.

Still confused. Instead of getting frustrated, I'm going to build a new clock page.

-----------------------------------

Jul 6

It is astounding how much HTML and CSS I have forgotten. A good portion of time has been spent trying to just get the simple timer page to show as desired.

	- update:
		- the UX/UI is less than ideal but it is workable enough
		- I will now switch to create a start and stop button
		- logic is not clean but making good progress towards getting a functional timer running quickly through the DOM
		- added decrement, setup, and other functionality
		- tested that program can run setInterval with passed parameters using an anonymous function
		- seconds successfully counting down in their container

